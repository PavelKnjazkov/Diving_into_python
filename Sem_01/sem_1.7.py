# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ7
# üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 999. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏
#    —Å–æ–æ–±—â–∏—Ç–µ —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ: —Ü–∏—Ñ—Ä–∞, –¥–≤—É–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ —Ç—Ä—ë—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ.
# üìå –î–ª—è —Ü–∏—Ñ—Ä—ã –≤–µ—Ä–Ω–∏—Ç–µ –µ—ë –∫–≤–∞–¥—Ä–∞—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä 5 - 25
# üìå –î–ª—è –¥–≤—É–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä 30 - 0
# üìå –î–ª—è —Ç—Ä—ë—Ö–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –µ–≥–æ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä 520 - 25
# üìå –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ
# üìå –û—Ç–∫–∞–∂–∏—Ç–µ—Å—å –æ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —á–∏—Å–µ–ª
# üìå –í –∫–æ–¥–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω input –∏ –æ–¥–∏–Ω print

MIN_NUMBER = 1
MAX_NUMBER = 999
SQUARE = 1
MULTIPLICATION = 2

while True:
    user_number_str = input(f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç {MIN_NUMBER} –¥–æ {MAX_NUMBER}: ')
    if MIN_NUMBER <= int(user_number_str) <= MAX_NUMBER:
        break

if len(user_number_str) == SQUARE:
    result_value = f'–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ {user_number_str} = {int(user_number_str)**2}'
elif len(user_number_str) == MULTIPLICATION:
    result_value = f'–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä —á–∏—Å–ª–∞ {user_number_str} = {int(user_number_str[0])*int(user_number_str[1])}'
else:
    new_number = ''
    new_number += user_number_str[2]
    new_number += user_number_str[1]
    new_number += user_number_str[0]
    result_value = f'–ó–µ—Ä–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–∏—Å–ª–∞ {user_number_str} = {new_number}'
print(result_value)