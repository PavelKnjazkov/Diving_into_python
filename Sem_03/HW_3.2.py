# 3. В большой текстовой строке подсчитать количество встречаемых
# слов и вернуть 10 самых частых. Не учитывать знаки препинания
# и регистр символов. За основу возьмите любую статью
# из википедии или из документации к языку.

example_str = 'Ядро Git представляет собой набор утилит командной строки с параметрами. Все настройки хранятся в текстовых файлах конфигурации.\
Такая реализация делает Git легко портируемым на любую платформу и даёт возможность легко интегрировать Git в другие системы (в частности, создавать\
графические git-клиенты с любым желаемым интерфейсом). Репозиторий Git представляет собой каталог файловой системы, в котором находятся файлы\
конфигурации репозитория, файлы журналов, хранящие операции, выполняемые над репозиторием, индекс, описывающий расположение файлов, и\
хранилище, содержащее собственно файлы. Структура хранилища файлов не отражает реальную структуру хранящегося в репозитории файлового\
дерева, она ориентирована на повышение скорости выполнения операций с репозиторием. Когда ядро обрабатывает команду изменения (неважно,\
при локальных изменениях или при получении патча от другого узла), оно создаёт в хранилище новые файлы, соответствующие новым\
состояниям изменённых файлов. Существенно, что никакие операции не изменяют содержимого уже существующих в хранилище файлов.\
По умолчанию репозиторий хранится в подкаталоге с названием «.git» в корневом каталоге рабочей копии дерева файлов,\
хранящегося в репозитории. Любое файловое дерево в системе можно превратить в репозиторий git, отдав команду создания\
репозитория из корневого каталога этого дерева (или указав корневой каталог в параметрах программы). Репозиторий может\
быть импортирован с другого узла, доступного по сети. При импорте нового репозитория автоматически создаётся рабочая\
копия, соответствующая последнему зафиксированному состоянию импортируемого репозитория (то есть не копируются изменения\
 в рабочей копии исходного узла, для которых на том узле не была выполнена команда commit).'

TOP_LIST = 10

example_str = example_str.lower().replace('.', '').replace(',', '').replace('[', ' [')
list_word = example_str.split()
dict_word = {}

for item in list_word:
    if item not in dict_word:
        dict_word[item] = list_word.count(item)
count = 0
print('ТОП 10 слов:  ')
while len(dict_word) != 0 and TOP_LIST > count:
    for item in dict_word:
        if dict_word[item] == max(dict_word.values()):
            print(f'"{item}":{dict_word[item]}', end='')
            if len(dict_word) != 1 and TOP_LIST > count+1:
                print(', ', end='')
            dict_word.pop(item)
            count += 1
            break